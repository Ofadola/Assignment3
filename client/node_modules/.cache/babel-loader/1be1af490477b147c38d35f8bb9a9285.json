{"ast":null,"code":"import io from 'socket.io-client';\nconst socket = io('http://localhost:4000');\nexport const subscribeConnectEvent = cb => {\n  socket.on('connect', cb);\n};\nexport const subscribeGameEvent = cb => {\n  socket.on('game', cb);\n};\nexport const subscribeMessageEvent = cb => {\n  socket.on('message', cb);\n};\nexport const subscribeErrorEvent = cb => {\n  socket.on('error', cb);\n};\nexport const joinRoom = ({\n  player,\n  gameId,\n  isHost\n}) => {\n  socket.emit('joinRoom', {\n    player,\n    gameId,\n    isHost\n  });\n};\nexport const startGame = gameId => {\n  console.log('starting game');\n  socket.emit('startGame', {\n    gameId\n  });\n}; // MAIN\n\nexport const storytellerChoose = ({\n  card,\n  clue,\n  gameId\n}) => {\n  console.log('Storyteller chose card');\n  socket.emit('storytellerChoose', {\n    card,\n    clue,\n    gameId\n  });\n};\nexport const playerChoose = ({\n  card,\n  username,\n  gameId\n}) => {\n  console.log('made choice');\n  socket.emit('playerChoose', {\n    card,\n    username,\n    gameId\n  });\n};\nexport const playerVote = ({\n  card,\n  username,\n  gameId\n}) => {\n  console.log('player voted');\n  socket.emit('playerVote', {\n    card,\n    username,\n    gameId\n  });\n};\nexport const storytellerConfirm = ({\n  gameId\n}) => {\n  console.log('Confirmed');\n  socket.emit('storytellerConfirm', {\n    gameId\n  });\n};\nexport const disconnectSocket = () => {\n  socket.disconnect();\n};\nexport const reconnectRoom = ({\n  username,\n  gameId\n}) => {\n  console.log('RECONNECTING ROOM');\n  socket.emit('reconnectRoom', {\n    username,\n    gameId\n  });\n};\nexport const isConnected = () => socket.connected;","map":{"version":3,"sources":["C:/Users/Bunshy BOT/Desktop/Assignment3/client/src/socket.js"],"names":["io","socket","subscribeConnectEvent","cb","on","subscribeGameEvent","subscribeMessageEvent","subscribeErrorEvent","joinRoom","player","gameId","isHost","emit","startGame","console","log","storytellerChoose","card","clue","playerChoose","username","playerVote","storytellerConfirm","disconnectSocket","disconnect","reconnectRoom","isConnected","connected"],"mappings":"AAAA,OAAOA,EAAP,MAAe,kBAAf;AAEA,MAAMC,MAAM,GAAGD,EAAE,CAAC,uBAAD,CAAjB;AAEA,OAAO,MAAME,qBAAqB,GAAIC,EAAD,IAAQ;AACzCF,EAAAA,MAAM,CAACG,EAAP,CAAU,SAAV,EAAqBD,EAArB;AACH,CAFM;AAIP,OAAO,MAAME,kBAAkB,GAAIF,EAAD,IAAQ;AACtCF,EAAAA,MAAM,CAACG,EAAP,CAAU,MAAV,EAAkBD,EAAlB;AACH,CAFM;AAIP,OAAO,MAAMG,qBAAqB,GAAIH,EAAD,IAAQ;AACzCF,EAAAA,MAAM,CAACG,EAAP,CAAU,SAAV,EAAqBD,EAArB;AACH,CAFM;AAIP,OAAO,MAAMI,mBAAmB,GAAIJ,EAAD,IAAQ;AACvCF,EAAAA,MAAM,CAACG,EAAP,CAAU,OAAV,EAAmBD,EAAnB;AACH,CAFM;AAIP,OAAO,MAAMK,QAAQ,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA,MAAV;AAAkBC,EAAAA;AAAlB,CAAD,KAAgC;AACpDV,EAAAA,MAAM,CAACW,IAAP,CAAY,UAAZ,EAAwB;AAAEH,IAAAA,MAAF;AAAUC,IAAAA,MAAV;AAAkBC,IAAAA;AAAlB,GAAxB;AACH,CAFM;AAIP,OAAO,MAAME,SAAS,GAAIH,MAAD,IAAY;AACjCI,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACAd,EAAAA,MAAM,CAACW,IAAP,CAAY,WAAZ,EAAyB;AAAEF,IAAAA;AAAF,GAAzB;AACH,CAHM,C,CAKP;;AACA,OAAO,MAAMM,iBAAiB,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,IAAR;AAAcR,EAAAA;AAAd,CAAD,KAA4B;AACzDI,EAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACAd,EAAAA,MAAM,CAACW,IAAP,CAAY,mBAAZ,EAAiC;AAAEK,IAAAA,IAAF;AAAQC,IAAAA,IAAR;AAAcR,IAAAA;AAAd,GAAjC;AACH,CAHM;AAKP,OAAO,MAAMS,YAAY,GAAG,CAAC;AAAEF,EAAAA,IAAF;AAAQG,EAAAA,QAAR;AAAkBV,EAAAA;AAAlB,CAAD,KAAgC;AACxDI,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACAd,EAAAA,MAAM,CAACW,IAAP,CAAY,cAAZ,EAA4B;AAAEK,IAAAA,IAAF;AAAQG,IAAAA,QAAR;AAAkBV,IAAAA;AAAlB,GAA5B;AACH,CAHM;AAKP,OAAO,MAAMW,UAAU,GAAG,CAAC;AAAEJ,EAAAA,IAAF;AAAQG,EAAAA,QAAR;AAAkBV,EAAAA;AAAlB,CAAD,KAAgC;AACtDI,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACAd,EAAAA,MAAM,CAACW,IAAP,CAAY,YAAZ,EAA0B;AAAEK,IAAAA,IAAF;AAAQG,IAAAA,QAAR;AAAkBV,IAAAA;AAAlB,GAA1B;AACH,CAHM;AAKP,OAAO,MAAMY,kBAAkB,GAAG,CAAC;AAAEZ,EAAAA;AAAF,CAAD,KAAgB;AAC9CI,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACAd,EAAAA,MAAM,CAACW,IAAP,CAAY,oBAAZ,EAAkC;AAAEF,IAAAA;AAAF,GAAlC;AACH,CAHM;AAKP,OAAO,MAAMa,gBAAgB,GAAG,MAAM;AAClCtB,EAAAA,MAAM,CAACuB,UAAP;AACH,CAFM;AAIP,OAAO,MAAMC,aAAa,GAAG,CAAC;AAAEL,EAAAA,QAAF;AAAYV,EAAAA;AAAZ,CAAD,KAA0B;AACnDI,EAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACAd,EAAAA,MAAM,CAACW,IAAP,CAAY,eAAZ,EAA6B;AAAEQ,IAAAA,QAAF;AAAYV,IAAAA;AAAZ,GAA7B;AACH,CAHM;AAKP,OAAO,MAAMgB,WAAW,GAAG,MAAMzB,MAAM,CAAC0B,SAAjC","sourcesContent":["import io from 'socket.io-client';\r\n\r\nconst socket = io('http://localhost:4000');\r\n\r\nexport const subscribeConnectEvent = (cb) => {\r\n    socket.on('connect', cb);\r\n}\r\n\r\nexport const subscribeGameEvent = (cb) => {\r\n    socket.on('game', cb);\r\n}\r\n\r\nexport const subscribeMessageEvent = (cb) => {\r\n    socket.on('message', cb);\r\n}\r\n\r\nexport const subscribeErrorEvent = (cb) => {\r\n    socket.on('error', cb);\r\n}\r\n\r\nexport const joinRoom = ({ player, gameId, isHost }) => {\r\n    socket.emit('joinRoom', { player, gameId, isHost });\r\n}\r\n\r\nexport const startGame = (gameId) => {\r\n    console.log('starting game');\r\n    socket.emit('startGame', { gameId });\r\n}\r\n\r\n// MAIN\r\nexport const storytellerChoose = ({ card, clue, gameId }) => {\r\n    console.log('Storyteller chose card')\r\n    socket.emit('storytellerChoose', { card, clue, gameId });\r\n}\r\n\r\nexport const playerChoose = ({ card, username, gameId }) => {\r\n    console.log('made choice')\r\n    socket.emit('playerChoose', { card, username, gameId });\r\n}\r\n\r\nexport const playerVote = ({ card, username, gameId }) => {\r\n    console.log('player voted');\r\n    socket.emit('playerVote', { card, username, gameId });\r\n}\r\n\r\nexport const storytellerConfirm = ({ gameId }) => {\r\n    console.log('Confirmed');\r\n    socket.emit('storytellerConfirm', { gameId });\r\n}\r\n\r\nexport const disconnectSocket = () => {\r\n    socket.disconnect();\r\n}\r\n\r\nexport const reconnectRoom = ({ username, gameId }) => {\r\n    console.log('RECONNECTING ROOM');\r\n    socket.emit('reconnectRoom', { username, gameId });\r\n}\r\n\r\nexport const isConnected = () => socket.connected;"]},"metadata":{},"sourceType":"module"}